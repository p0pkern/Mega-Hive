{"version":3,"sources":["components/misc/Buttons.js","components/misc/Header.js","components/misc/Footer.js","components/misc/CheatButton.js","components/workers/MealMined.js","components/workers/MealPerSecond.js","components/workers/WorkerUnlocked.js","components/workers/WorkerLocked.js","components/workers/WorkerItem.js","components/warriors/Meat.js","components/warriors/AttackPower.js","components/warriors/Enemy.js","components/warriors/WarriorLocked.js","components/warriors/WarriorUnlocked.js","components/warriors/Warriors.js","components/data/NewPlayer.js","components/true-mind/TrueMindHeading.js","components/true-mind/TrueMind.js","components/GameContainer.js","App.js","index.js"],"names":["Buttons","text","handleClickEvent","classNameAssigned","onClick","className","style","cursor","Header","Footer","target","href","rel","CheatButton","handleCheat","type","MealMined","meal","MealPerSecond","mps","WorkerUnlocked","worker","handleUpgrade","id","level","name","HPS","cost","multiplier","WorkerLocked","workerId","workerCost","handleInitialPurchase","WorkerItem","workerStats","initialPurchase","upgradingUnit","unlocked","Meat","meat","AttackPower","attack","Enemy","health","kills","handleAttackClick","WarriorLocked","warrior","harvestCost","meatCost","WarriorUnlocked","handleUpgradeUnit","Warriors","warriorStats","upgradeUnit","newPlayer","clickMultiplier","mealPerSecond","workers","baseCost","baseHPS","attackPower","attackPerSecond","enemy","baseHealth","warriors","baseAttack","baseHarvestCost","baseMeatCost","mindEssence","TrueMindHeader","essences","TrueMind","handleAscension","GameContainer","handleEnableCheat","setPlayer","prevPlayer","newPlayerObject","useState","temp","localStorage","getItem","JSON","parse","getInitialPlayer","player","handleInitialPurchaseWorker","i","length","selectedWorker","unlockWorker","calculateMealPerSecond","selectedUnit","map","prevWorker","Math","round","handleUpgradeWorker","upgradeWorkerStats","newMealPerSecond","reduce","total","ceil","handleInitialPurchaseWarrior","selectedWarrior","unlockWarriorStats","meatLeft","mealLeft","newAttack","upgradeWarrior","upgradeWarriorStats","enemyDamageCalculator","enemyStats","meatCalc","meatStats","getRandomInteger","max","floor","random","useEffect","interval","setInterval","clearInterval","stringify","setItem","window","confirm","removeItem","location","reload","visibility","answer","essence","workerEssence","warriorEssence","calculateMindEssence","usableEssence","workerIds","warriorIds","randNum1","randNum2","randNum3","alert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34a7faca.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Buttons = ({ text, handleClickEvent, classNameAssigned }) => {\n    return (\n        <button \n            onClick={handleClickEvent} \n            className={classNameAssigned}\n            style={{cursor: 'pointer'}}>{text}</button>\n    )\n}\n\nexport default Buttons","import React from \"react\"\nimport { BiHive } from \"react-icons/bi\"\n\nconst Header = () => {\n    return (\n        <>  \n            <h1 className=\"header-logo\"><BiHive />Mega Hive</h1>\n        </>\n    )\n}\n\nexport default Header","import React from \"react\"\nimport { FaGithub } from \"react-icons/fa\"\nimport { ImLinkedin } from \"react-icons/im\"\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <p>Created by Chris Peterman</p>\n            <div className=\"footer-icon\">\n                <a target=\"_blank\" href=\"https://github.com/p0pkern\" className=\"github\" rel=\"noreferrer\"><FaGithub /></a>\n                <a target=\"_blank\" href=\"https://www.linkedin.com/in/chris-peterman-464005ba/\" className=\"linkedin\" rel=\"noreferrer\"><ImLinkedin /></a>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer","import React from \"react\"\n\nconst CheatButton = ({text, handleCheat, type}) => {\n    return (\n        <button className=\"cheat-button\" onClick={() => handleCheat(type)} style={{cursor: \"pointer\"}}>\n            {text}\n        </button>\n    )\n}\n\nexport default CheatButton","import React from \"react\"\n\nconst MealMined = ({ meal }) => {\n    return (\n        <div>\n            <h3 className=\"meal-mined\">Meal Harvested:</h3>\n            <p>{meal}</p>\n        </div>\n    )\n}\n\nexport default MealMined","import React from \"react\"\n\nconst MealPerSecond = ({ mps }) => {\n\n    return (\n        <div>\n            <p className=\"meal-per-second\">{`Meal Per Second:`}</p>\n            <p>{mps}</p>\n        </div>\n    )\n}\n\nexport default MealPerSecond","import React from \"react\"\nimport { RiBugLine } from \"react-icons/ri\"\n\nconst WorkerUnlocked = ({worker, handleUpgrade}) => {\n    return (\n        <li key={worker.id}>\n            <button\n                onClick={() => handleUpgrade(worker.id)}\n                style={{cursor: 'pointer'}}\n                className=\"worker-item worker-item-unlocked\">\n                    <div className=\"worker-unlocked\">\n                        <div className=\"worker-icon-level-container\">\n                            <p className=\"worker-icon-unlocked\"><RiBugLine /></p>\n                            <p>{`lvl: ${worker.level}`}</p>\n                        </div>\n                        <div className=\"worker-info-container\">\n                            <p className=\"worker-name\">{`${worker.name}`}</p>\n                            <p>{`HPS: ${worker.HPS}`}</p>\n                            <p>{`Cost: ${worker.cost}`}</p>\n                            <p>{`Multiplier: x${worker.multiplier}`}</p>\n                        </div>\n                    </div>\n            </button>\n        </li>\n    )\n}\n\nexport default WorkerUnlocked","import React from \"react\"\nimport { BsQuestionSquare } from \"react-icons/bs\"\n\nconst WorkerLocked = ({workerId, workerCost, handleInitialPurchase}) => {\n    return  (\n        <li key={workerId}>\n            <button key={`${workerId}btn`} \n                    onClick={() => handleInitialPurchase(workerId)}\n                    className=\"worker-item\"\n                    style={{cursor: 'pointer'}}>\n                <div className=\"locked-container\">\n                    <p className=\"locked-icon\"><BsQuestionSquare/></p>\n                    <p className=\"locked-cost\">{`Cost: ${workerCost}`}</p>\n                </div>\n            </button>\n        </li>\n    )\n}\n\nexport default WorkerLocked","import React from \"react\"\nimport WorkerUnlocked from \"./WorkerUnlocked\"\nimport WorkerLocked from \"./WorkerLocked\"\n\nconst WorkerItem = ({workerStats, initialPurchase, upgradingUnit}) => {\n    if (workerStats.unlocked) {\n        return (\n            <WorkerUnlocked \n                worker={workerStats}\n                handleUpgrade={upgradingUnit}\n                key={workerStats.id}/>\n        )}\n    return (\n        <WorkerLocked \n            workerId={workerStats.id}\n            workerCost={workerStats.cost}\n            handleInitialPurchase={initialPurchase}\n            key={workerStats.id}\n            />\n    )\n}\n\nexport default WorkerItem","import React from \"react\"\n\nconst Meat = ({ meat }) => {\n    return (\n        <div className=\"meat-harvest\">\n            <h3 >Meat Hunted: </h3>\n            <p>{meat}</p>\n        </div>\n    )\n}\n\nexport default Meat","import React from \"react\"\n\nconst AttackPower = ({ attack }) => {\n\n    return (\n        <div className=\"attack-per-second\">\n            <p>{`Attack Power:`}</p>\n            <p>{attack}</p>\n        </div>\n    )\n}\n\nexport default AttackPower","import React from \"react\"\nimport { GiLongAntennaeBug } from \"react-icons/gi\"\n\nconst Enemy = ({name, health, level, kills, handleAttackClick}) => {\n    return (\n        <button className=\"enemy-data\" onClick={handleAttackClick} style={{cursor: \"pointer\"}}>\n            <h3>{name}</h3>\n            <p>{`Level: ${level}`}</p> \n            <p>Health:</p>\n            <p>{health}</p>\n            <p>Kills:</p>\n            <p>{kills}</p>\n            <GiLongAntennaeBug className=\"enemy-image\"/>\n            <p className=\"enemy-data-bottom\">Click to kill</p>\n        </button>\n    )\n}\n\nexport default Enemy","import React from \"react\"\nimport { BsQuestionSquare } from \"react-icons/bs\"\n\nconst WarriorLocked = ({warrior, handleInitialPurchase}) => {\n    return (\n        <button \n            onClick={() => handleInitialPurchase(warrior.id)}\n            className=\"warrior-locked\"\n            style={{cursor: \"pointer\"}}>\n            <p className=\"warrior-locked-icon\"><BsQuestionSquare /></p>\n            <div className=\"warrior-locked-data\">\n                <p>{`Harvest Cost: ${warrior.harvestCost}`}</p>\n                <p>{`Meat Cost: ${warrior.meatCost}`}</p>\n            </div>\n        </button>\n    )\n}\n\nexport default WarriorLocked","import React from \"react\"\nimport { GiAlienBug } from \"react-icons/gi\"\n\nconst WarriorUnlocked = ({ warrior, handleUpgradeUnit}) => {\n    return (\n        <button \n            onClick={() => handleUpgradeUnit(warrior.id)}\n            className=\"warrior-unlocked\"\n            style={{cursor: \"pointer\"}}>\n            <div className=\"warrior-unlocked-data\">\n                <div className=\"warrior-unlocked-name-level\">\n                    <p>{warrior.name}</p>\n                    <p className=\"warrior-unlocked-icon\"><GiAlienBug /></p>\n                    <p>{`Level: ${warrior.level}`}</p>\n                </div>\n                <div className=\"warrior-unlocked-data-items\">\n                    <p>{`Atk: ${warrior.attack}`}</p>\n                    <p>{`Meat: ${warrior.meatCost}`}</p>\n                    <p>{`Meal: ${warrior.harvestCost}`}</p>\n                    <p>{`Mult: ${warrior.multiplier}`}</p>\n                </div>\n            </div>\n        </button>\n    )\n}\n\nexport default WarriorUnlocked","import React from \"react\"\nimport WarriorLocked from \"./WarriorLocked\"\nimport WarriorUnlocked from \"./WarriorUnlocked\"\n\nconst Warriors = ({ warriorStats, initialPurchase, upgradeUnit }) => {\n    if (warriorStats.unlocked) {\n        return (\n            <li key={warriorStats.id}>\n                <WarriorUnlocked\n                    warrior={warriorStats} \n                    handleUpgradeUnit={upgradeUnit}/>\n            </li>\n        )\n    } else {\n        return (\n            <li key={warriorStats.id}>\n                <WarriorLocked\n                    warrior={warriorStats} \n                    handleInitialPurchase={initialPurchase}/>\n            </li>\n        )\n    }\n\n}\n\nexport default Warriors","const newPlayer = {\n    meal: 0,\n    clickMultiplier: 1,\n    mealPerSecond: 0, \n    workers : [\n        {\n            id : \"w1\",\n            name : \"Queen\",\n            cost : 25,\n            HPS : 1,\n            level : 0,\n            unlocked : false,\n            multiplier : 1,\n            baseCost : 25,\n            baseHPS : 1,   \n        },\n        {   \n            id : \"w2\",\n            name : \"Brood Chamber\",\n            cost : 100,\n            HPS : 3,\n            level : 0,\n            unlocked : false,\n            multiplier : 1,\n            baseCost : 100,\n            baseHPS : 3, \n        },\n        {   \n            id : \"w3\",\n            name : \"Attentive Daughters\",\n            cost : 500,\n            HPS : 7,\n            level : 0,\n            unlocked : false,\n            multiplier : 1,\n            baseCost : 500,\n            baseHPS : 7, \n        },\n        {   \n            id : \"w4\",\n            name : \"Moldy Chambers\",\n            cost : 3000,\n            HPS : 12,\n            level : 0,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 3000,\n            baseHPS : 12, \n        },\n        {   \n            id : \"w5\",\n            name : \"Aphid Farm\",\n            cost : 10000,\n            HPS : 40,\n            level : 0,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 10000,\n            baseHPS : 40, \n        },\n        {   \n            id : \"w6\",\n            name : \"Local Insects\",\n            cost : 40000,\n            HPS : 100,\n            level : 0,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 40000,\n            baseHPS : 100, \n        },\n        {   \n            id : \"w7\",\n            name : \"Stray Garbage\",\n            cost : 200000,\n            HPS : 400,\n            level : 0,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 200000,\n            baseHPS : 400, \n        },\n        {   \n            id : \"w8\",\n            name : \"Farming for... Ants?\",\n            cost : 1600000,\n            HPS : 6500,\n            level : 0,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 1600000,\n            baseHPS : 6500, \n        },\n        {   \n            id : \"w9\",\n            name : \"Primitive Farming\",\n            cost : 120000000,\n            HPS : 99000,\n            level : 0,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 120000000,\n            baseHPS : 99000, \n        },\n        {   \n            id : \"w10\",\n            name : \"Human Farming Tech\",\n            cost : 4000000000,\n            HPS : 100000,\n            level : 0,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 4000000000,\n            baseHPS : 100000, \n        },\n    ],\n    attackPower: 1,\n    attackPerSecond: 0,\n    meat : 1,\n    enemy : {\n        name : \"Bill the Placeholder Bug\",\n        level : 0,\n        health : 100,\n        kills : 0,\n        baseHealth : 100,\n    },\n    warriors : [\n        {   \n            id: \"wa1\",\n            level : 0,\n            name: \"Arissa the Huntress\",\n            attack : 10,\n            meatCost : 1,\n            harvestCost : 1200,\n            baseAttack : 10,\n            baseHarvestCost : 1200,\n            baseMeatCost : 1,\n            unlocked : false,\n            multiplier : 1,\n        },\n        {   \n            id: \"wa2\",\n            level : 0,\n            name: \"Donatello the Artist\",\n            attack : 25,\n            meatCost : 100,\n            harvestCost : 12000,\n            baseAttack : 25,\n            baseHarvestCost : 12000,\n            baseMeatCost : 100,\n            unlocked : false,\n            multiplier : 1,\n\n        },\n        {   \n            id: \"wa3\",\n            level : 0,\n            name: \"Elizabeth of the Hive\",\n            attack : 100,\n            meatCost : 1000,\n            harvestCost : 52000,\n            baseAttack : 100,\n            baseHarvestCost : 52000,\n            baseMeatCost : 1000,\n            unlocked : false,\n            multiplier : 1,\n\n        },\n        {   \n            id: \"wa4\",\n            level : 0,\n            name: \"Marcus the Bone Collector\",\n            attack : 250,\n            meatCost : 25000,\n            harvestCost : 100000,\n            baseAttack : 250,\n            baseHarvestCost : 100000,\n            baseMeatCost : 25000,\n            unlocked : false,\n            multiplier : 1,\n        },\n        {   \n            id: \"wa5\",\n            level : 0,\n            name: \"Sangrinous the End Bringer\",\n            attack : 3000,\n            meatCost : 250000,\n            harvestCost : 100000000,\n            baseAttack : 3000,\n            baseHarvestCost : 100000000,\n            baseMeatCost : 100000000,\n            unlocked : false,\n            multiplier : 1,\n        },\n    ],\n    mindEssence : 0,\n}\n\n\nexport { newPlayer }","import React from \"react\"\n\nconst TrueMindHeader = ({ essences }) => {\n    return (\n        <div className=\"true-mind-header\">\n            <h3>Essences:</h3>\n            <p>{`${essences} providing ${essences * 10}% Meal and Meat per second.`}</p>\n        </div>\n\n    )\n}\n\nexport default TrueMindHeader","import React from \"react\"\nimport { GiBrainTentacle } from \"react-icons/gi\"\nconst TrueMind = ({ handleAscension }) => {\n    return <button onClick={() => handleAscension()} \n                   className=\"true-mind-data\"\n                   style={{cursor: \"pointer\"}}>\n            <h3>The True Mind</h3>\n                <p><GiBrainTentacle /></p>\n            <div className=\"true-mind-cost\">\n                <p>Meal: 100000</p>\n                <p>Meat: 1000</p>\n            </div>\n            <p className=\"true-mind-text\">The True Mind peers into your soul. If you offer it the lives of your units and your resources, it will bless you with the essence of your units as well as a bonus to 2 Workers and 1 Warrior. This effect is not reversable.</p>\n        </button>\n}\n\nexport default TrueMind","import React, { useState, useEffect } from \"react\"\n\n// Components\nimport Buttons from \"./misc/Buttons\"\nimport Header from \"./misc/Header\"\nimport Footer from \"./misc/Footer\"\nimport CheatButton from \"./misc/CheatButton\"\n\n// Worker Components\nimport MealMined from \"./workers/MealMined\"\nimport MealPerSecond from \"./workers/MealPerSecond\"\nimport WorkerItem from \"./workers/WorkerItem\"\n\n// Warrior Components\nimport Meat from \"./warriors/Meat\"\nimport AttackPower from \"./warriors/AttackPower\"\nimport Enemy from \"./warriors/Enemy\"\nimport Warriors from \"./warriors/Warriors\"\n\n// Player object\nimport { newPlayer } from \"./data/NewPlayer\"\n\n// Ascension\nimport TrueMindHeader from \"./true-mind/TrueMindHeading\"\nimport TrueMind from \"./true-mind/TrueMind\"\n\nconst GameContainer = () => {\n\n    ////////////////////\n    // CHEAT SECTION //\n    ///////////////////\n    const handleEnableCheat = type => {\n        if (type === \"midGame\") {\n            setPlayer(prevPlayer => ({\n                ...prevPlayer,\n                meal : 100000000,\n            }))\n        } else {\n            setPlayer(prevPlayer => ({\n                ...prevPlayer,\n                meat : 100000000,\n            }))\n        }\n    }\n\n    \n    //////////////////////\n    // END CHEAT SECTION//\n    /////////////////////\n\n\n    ///////////////////////\n    // GAME PLAY SECTION//\n    //////////////////////\n\n    // Blank player object\n    let newPlayerObject = newPlayer\n\n    // Gameplay hook\n    const [player, setPlayer] = useState(getInitialPlayer())\n\n    // Initial Unlock of Worker\n    const handleInitialPurchaseWorker = id => {\n        // Handles the initial purchase of a worker from hidden to revealed.\n        for (let i=0; i < player.workers.length; i++) {\n            if (player.workers[i].id === id) {\n                const selectedWorker = player.workers[i]\n                if (player.meal >= selectedWorker.cost) {\n                    unlockWorker(selectedWorker)\n                } \n            }\n        }\n        \n        setPlayer(prevPlayer => ({\n            ...prevPlayer,\n            mealPerSecond: calculateMealPerSecond(), \n        }))\n    }\n\n    function unlockWorker(selectedUnit) {\n        setPlayer({\n            ...player,\n            meal : player.meal - selectedUnit.cost, \n            workers : player.workers.map(prevWorker => {\n                if (prevWorker.id === selectedUnit.id) {\n                    prevWorker.unlocked = true\n                    prevWorker.level = 1\n                    prevWorker.cost = Math.round(((prevWorker.cost) * (1.07**prevWorker.level)))\n                }\n                return prevWorker\n            }),\n        })\n    }\n\n    // Upgrading Worker\n    const handleUpgradeWorker = id => {\n        for (let i=0; i < player.workers.length; i++) {\n            if (player.workers[i].id === id) {\n                const selectedWorker = player.workers[i]\n                if (player.meal >= selectedWorker.cost) {\n                    upgradeWorkerStats(selectedWorker)\n                }\n            }  \n        }\n    }\n\n    function upgradeWorkerStats(selectedUnit) {\n\n        setPlayer({\n            ...player,\n            meal : player.meal - selectedUnit.cost,\n            workers : player.workers.map(prevWorker => {\n                if (prevWorker.id === selectedUnit.id) {\n                    prevWorker.cost = Math.round((prevWorker.cost * (1.07**prevWorker.level)))\n                    prevWorker.level = prevWorker.level + 1\n                    prevWorker.HPS = prevWorker.HPS > 1 ? prevWorker.HPS + (prevWorker.baseHPS * prevWorker.multiplier) : prevWorker.HPS + 1\n                }\n                return prevWorker\n            }),\n            mealPerSecond: calculateMealPerSecond(),\n        })\n    }\n\n    function calculateMealPerSecond() {\n        const newMealPerSecond = player.workers.reduce((total, worker) => {\n            if (worker.unlocked) {\n                return total + worker.HPS\n            } else {\n                return total\n            }\n        }, 0)\n\n        const totalMealPerSecond = newMealPerSecond + Math.ceil((newMealPerSecond * (player.mindEssence / 100)))\n\n        return totalMealPerSecond\n    }\n\n    // Unlocking Warrior\n    const handleInitialPurchaseWarrior = id => {\n        for(let i=0; i < player.warriors.length; i++) {\n            if (player.warriors[i].id === id) {\n                const selectedWarrior = player.warriors[i]\n                if (player.meat >= selectedWarrior.meatCost && player.meal >= selectedWarrior.harvestCost) {\n                    unlockWarriorStats(selectedWarrior)\n                } \n            } \n        }\n    }\n\n    function unlockWarriorStats(selectedWarrior) {\n        const meatLeft = player.meat - selectedWarrior.meatCost\n        const mealLeft = player.meal - selectedWarrior.harvestCost\n        const newAttack = player.warriors.reduce((total, warrior) => {\n            if (warrior.unlocked) {\n                return total + warrior.attack\n            } else if (warrior.id === selectedWarrior.id){\n                return total + warrior.attack\n            } else {\n                return total\n            }\n        }, 0)\n        setPlayer(prevPlayer => ({\n            ...prevPlayer,\n            meal : mealLeft,\n            meat : meatLeft,\n            warriors : prevPlayer.warriors.map(warrior => {\n                if (warrior.id === selectedWarrior.id) {\n                    warrior.unlocked = true\n                    warrior.level = 1\n                    warrior.meatCost = Math.round(warrior.baseMeatCost * (1.09**warrior.level))\n                    warrior.harvestCost = Math.round(warrior.baseHarvestCost * (1.09**warrior.level))\n                }\n                return warrior\n            }),\n            attackPerSecond : newAttack,\n        }))\n    }\n\n    // Upgrading warrior\n    const upgradeWarrior = id => {\n        for (let i=0; i < player.warriors.length; i++) {\n            if (player.warriors[i].id === id) {\n                const selectedWarrior = player.warriors[i]\n                if (player.meat >= selectedWarrior.meatCost && player.meal >= selectedWarrior.harvestCost) {\n                    upgradeWarriorStats(selectedWarrior)\n                }\n            }\n        }\n        \n    }\n\n    function upgradeWarriorStats(selectedWarrior) {\n        const meatLeft = player.meat - selectedWarrior.meatCost\n        const mealLeft = player.meal - selectedWarrior.harvestCost\n        setPlayer(prevPlayer => ({\n            ...prevPlayer,\n            meal : mealLeft,\n            meat : meatLeft,\n            warriors : prevPlayer.warriors.map(warrior => {\n                if (warrior.id === selectedWarrior.id) {\n                    warrior.meatCost = Math.round(warrior.baseMeatCost * (1.09**warrior.level))\n                    warrior.harvestCost = Math.round(warrior.baseHarvestCost * (1.09**warrior.level))\n                    warrior.level = warrior.level + 1\n                    warrior.attack = warrior.attack > 1 ? warrior.attack + (warrior.baseAttack * warrior.multiplier) : warrior.attack + 1\n                }\n                return warrior\n            }),\n            attackPerSecond : prevPlayer.warriors.reduce((total, warrior) => {\n                if (warrior.unlocked) {\n                    return total + warrior.attack\n                } else {\n                    return total\n                }\n            }, 0)\n        }))\n    } \n\n    // Handles clicking events on screen for resources\n    const handleClick = () => {\n        setPlayer(prevPlayer => ({\n            ...prevPlayer,\n            meal : prevPlayer.meal + prevPlayer.clickMultiplier\n        }))\n    }\n\n    const handleAttack = () => {\n        const { enemyStats, meatStats } = enemyDamageCalculator(\"attackPower\")\n        setPlayer(prevPlayer => ({\n            ...prevPlayer,\n            enemy : enemyStats,\n            meat : meatStats,\n        }))\n\n    }\n\n    // Calculate damage to the insect enemy\n    function enemyDamageCalculator(type) {\n        if (player.enemy.health - player[type] <= 0) {\n            const enemyStats = { \n                    ...player.enemy,\n                    level : player.enemy.level + 1,\n                    health: Math.round((player.enemy.baseHealth * (1.2**player.enemy.level))),\n                    kills : player.enemy.kills + 1,}\n            const meatCalc = (Math.round(.01 * player.enemy.health) > 1 ? Math.round(.01 * player.enemy.health) : 1)\n            const meatStats = player.meat + Math.ceil(meatCalc * (player.mindEssence / 100))\n\n            return {enemyStats, meatStats}\n        } else {\n            const enemyStats = {\n                    ...player.enemy,\n                    health: player.enemy.health - player[type]\n                }\n            const meatStats = player.meat\n            \n            return {enemyStats, meatStats}\n        }\n    }\n\n\n    ///////////////////////////\n    //ACTIVATE THE TRUE MIND//\n    //////////////////////////\n\n    const trueMindAscension = () => {\n        const answer = window.confirm(\"Do you want to sacrifice you units and Ascend to the greater plane?\")\n        if (answer && (player.meal >= 100000 && player.meat > 1000)) {\n            const essence = calculateMindEssence()\n            const usableEssence = essence >= 100 ? Math.round(essence / 100) : 1\n\n            const workerIds = [\"w1\", \"w2\", \"w3\", \"w4\", \"w5\",\n                               \"w6\", \"w7\", \"w8\", \"w9\", \"w10\"]\n\n            const warriorIds = [\"wa1\", \"wa2\", \"wa3\", \"wa4\", \"wa5\"]\n\n            const randNum1 = getRandomInteger(player.workers.length - 1)\n            const randNum2 = getRandomInteger(player.workers.length - 1)\n\n            const randNum3 = getRandomInteger(player.warriors.length - 1)\n\n            setPlayer(prevPlayer => ({\n                ...prevPlayer,\n                meat : 0,\n                meal : 0,\n                mealPerSecond: 0,\n                workers : prevPlayer.workers.map(worker => {\n                    worker.cost = worker.baseCost \n                    worker.HPS = worker.baseHPS\n                    worker.level = 0\n                    worker.unlocked = false\n                    if (worker.id === workerIds[randNum1]) {\n                        worker.multiplier = worker.multiplier + 1\n                    }\n                    if (worker.id === workerIds[randNum2]) {\n                        worker.multiplier = worker.multiplier + 1\n                    }\n\n                    return worker\n                }),\n                attackPower : 1,\n                attackPerSecond : 0,\n                warriors : prevPlayer.warriors.map(warrior => {\n                    warrior.level = 0\n                    warrior.attack = warrior.baseAttack\n                    warrior.meatCost = warrior.baseMeatCost\n                    warrior.harvestCost = warrior.baseHarvestCost\n                    warrior.unlocked = false\n                    if (warrior.id === warriorIds[randNum3]) {\n                        warrior.multiplier += 1\n                    }\n                    return warrior\n                }),\n                mindEssence : usableEssence\n            }))\n        } else if (answer && (player.meat < 1000 || player.meal < 100000)) {\n            alert(\"The True Mind denies your request.\")\n        }\n    }\n\n    function calculateMindEssence() {\n        const workerEssence = player.workers.reduce((total, worker) => {\n            return total + worker.level\n        }, 0)\n\n        const warriorEssence = player.workers.reduce((total, warrior) => {\n            return total + warrior.level\n        }, 0)\n\n        return workerEssence + warriorEssence\n    }\n\n    function getRandomInteger(max) {\n        return Math.floor(Math.random() * max)\n    }\n\n    ////////////////////////////\n    //END TRUE MIND ACTIVATION//\n    ////////////////////////////\n\n    ////////////////////////////\n    // END OF GAMEPLAY SECTION//\n    ///////////////////////////\n\n\n    //////////////////////\n    // INCREMENTAL TIMER//\n    /////////////////////\n    useEffect(() => {\n        const { enemyStats, meatStats } = enemyDamageCalculator(\"attackPerSecond\")\n        const interval = setInterval(() => {\n            setPlayer(prevPlayer => ({\n                ...prevPlayer, \n                meal : prevPlayer.meal + (prevPlayer.mealPerSecond),\n                enemy : enemyStats,\n                meat : meatStats,\n            }))\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [player]);\n\n    //////////////////////////\n    // END INCREMENTAL TIMER//\n    //////////////////////////\n\n\n    //////////////////////////////////////////////////////\n    // SAVING AND DELETING DATA TO LOCAL STORAGE SECTION//\n    /////////////////////////////////////////////////////\n    const handleDelete = () => {\n        // Deletes the game save from local storage.\n        const answer = window.confirm(\"Reset all save data?\")\n        if (answer) {\n            localStorage.removeItem(\"player\")\n            resetPlayer()\n        }   \n    }\n\n    function resetPlayer() {\n        setPlayer(newPlayerObject)\n        window.location.reload()\n    }\n\n    function getInitialPlayer() {\n        // Parses local storage for player data before assigning a new game.\n        const temp = localStorage.getItem(\"player\")\n        const savedPlayer = JSON.parse(temp)\n        return savedPlayer || newPlayerObject\n    } \n\n    useEffect(() => {\n        // Sets data to local storage any time player object changes.\n        const temp = JSON.stringify(player)\n        localStorage.setItem(\"player\", temp)\n    }, [player])\n\n    ////////////////////////////////\n    // END OF SAVE DELETE SECTION//\n    ///////////////////////////////\n    \n    return (\n        <div className=\"game-area\">\n            <div className=\"header-container\">\n                <Header />\n                <div className=\"top-row-button\">\n                    <CheatButton \n                        text=\"Advance to Mid Game\" \n                        handleCheat={handleEnableCheat}\n                        type=\"midGame\"/>\n                    <CheatButton \n                        text=\"Advance to Late Game\" \n                        handleCheat={handleEnableCheat}\n                        type=\"lateGame\"/>\n                    <Buttons\n                        text=\"New Game\" \n                        handleClickEvent={handleDelete}\n                        classNameAssigned=\"new-game-button\"\n                    />\n                </div>\n        \n            </div>\n                <div className=\"gameplay-row\">\n                <div className=\"gameplay-section\">\n                    <div className=\"harvest-section\">\n                        <MealMined meal={player.meal} />\n                        <MealPerSecond mps={player.mealPerSecond}/>\n                        <Buttons \n                            text=\"Click to Harvest Meal\" \n                            handleClickEvent={handleClick}\n                            classNameAssigned=\"harvest-meal-btn\" \n                        />\n                    </div>\n                    <div className=\"workers-section\">\n                        <h3>Workers</h3>\n                        <ul className=\"worker-list\">\n                            {player.workers.map(worker => {\n                                return <WorkerItem \n                                            workerStats={worker} \n                                            initialPurchase={handleInitialPurchaseWorker}\n                                            upgradingUnit={handleUpgradeWorker}/>\n                            })}\n                        </ul>\n                    </div> \n                </div>\n                \n                    <div className=\"warriors-section\" style={{visibility : player.workers[5].unlocked ? 'visible' : 'hidden'}}>\n                        <Meat \n                            meat={player.meat}\n                        />\n                        <AttackPower attack={player.attackPerSecond}/>\n                        <Enemy\n                            handleAttackClick={handleAttack} \n                            name={player.enemy.name}\n                            health={player.enemy.health}\n                            level={player.enemy.level}\n                            kills={player.enemy.kills}\n                        />\n                        <h3>Warriors</h3>\n                        <ul className=\"warrior-list\">\n                            {player.warriors.map(warrior => {\n                                return <Warriors \n                                            warriorStats={warrior}\n                                            initialPurchase={handleInitialPurchaseWarrior}\n                                            upgradeUnit={upgradeWarrior}/>\n                            })}\n                        </ul>\n                    </div>\n                    <div className=\"true-mind-area\">\n                        <div style={{visibility : player.mindEssence > 0 ? 'visible' : 'hidden'}}>\n                            <TrueMindHeader essences={player.mindEssence} />\n                        </div>\n                        <div style={{visibility : player.warriors[2].unlocked ? 'visible' : 'hidden'}}>\n                        <TrueMind handleAscension={trueMindAscension}/>\n                        </div>\n                    </div>\n                </div>\n\n                <footer>\n                    <Footer /> \n                </footer>         \n        </div>\n    )\n}\n\nexport default GameContainer","import React from \"react\"\n\n// Components\nimport GameContainer from \"./components/GameContainer\"\n\nfunction App() {\n\n return (\n    <div>\n      <GameContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./App.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}