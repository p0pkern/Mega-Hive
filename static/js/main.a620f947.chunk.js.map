{"version":3,"sources":["components/misc/Buttons.js","components/misc/Header.js","components/misc/Message.js","components/misc/Footer.js","components/workers/MealMined.js","components/workers/MealPerSecond.js","components/workers/WorkerUnlocked.js","components/workers/WorkerLocked.js","components/workers/WorkerItem.js","components/warriors/Meat.js","components/warriors/AttackPower.js","components/warriors/Enemy.js","components/data/NewPlayer.js","components/GameContainer.js","App.js","index.js"],"names":["Buttons","text","handleClickEvent","classNameAssigned","onClick","className","style","cursor","Header","Message","sendMessage","Footer","target","href","rel","MealMined","meal","MealPerSecond","mps","WorkerUnlocked","worker","handleUpgrade","id","level","name","HPS","cost","multiplier","WorkerLocked","workerId","workerCost","handleInitialPurchase","WorkerItem","workerStats","initialPurchase","upgradingUnit","unlocked","Meat","meat","AttackPower","attack","Enemy","health","kills","handleAttackClick","newPlayer","clickMultiplier","mealPerSecond","workers","baseCost","baseHPS","attackPower","attackPerSecond","enemy","baseHealth","warriors","meatCost","harvestCost","baseAttack","baseHarvestCost","baseMeatCost","GameContainer","newPlayerObject","useState","temp","localStorage","getItem","JSON","parse","getInitialPlayer","player","setPlayer","i","length","selectedWorker","unlockUnit","handleMessage","prevPlayer","reduce","total","selectedUnit","map","prevWorker","Math","round","upgradeUnit","enemyDamageCalculator","type","enemyStats","meatStats","useEffect","interval","setInterval","clearInterval","stringify","setItem","message","setMessage","window","confirm","removeItem","location","reload","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a620f947.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Buttons = ({ text, handleClickEvent, classNameAssigned }) => {\n    return (\n        <button \n            onClick={handleClickEvent} \n            className={classNameAssigned}\n            style={{cursor: 'pointer'}}>{text}</button>\n    )\n}\n\nexport default Buttons","import React from \"react\"\nimport { BiHive } from \"react-icons/bi\"\n\nconst Header = () => {\n    return (\n        <>  \n            <h1 className=\"header-logo\"><BiHive />Mega Hive</h1>\n        </>\n    )\n}\n\nexport default Header","import React from \"react\"\n\nconst Message = ({ sendMessage }) => {\n    return <p className=\"message-box\">{`Message: ${sendMessage}`}</p>\n}\n\nexport default Message","import React from \"react\"\nimport { FaGithub } from \"react-icons/fa\"\nimport { ImLinkedin } from \"react-icons/im\"\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <p>Created by Chris Peterman</p>\n            <div className=\"footer-icon\">\n                <a target=\"_blank\" href=\"https://github.com/p0pkern\" className=\"github\" rel=\"noreferrer\"><FaGithub /></a>\n                <a target=\"_blank\" href=\"https://www.linkedin.com/in/chris-peterman-464005ba/\" className=\"linkedin\" rel=\"noreferrer\"><ImLinkedin /></a>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer","import React from \"react\"\n\nconst MealMined = ({ meal }) => {\n    return (\n        <div>\n            <h3 className=\"meal-mined\">Meal Harvested:</h3>\n            <p>{meal}</p>\n        </div>\n    )\n}\n\nexport default MealMined","import React from \"react\"\n\nconst MealPerSecond = ({ mps }) => {\n\n    return (\n        <div>\n            <p className=\"meal-per-second\">{`Meal Per Second:`}</p>\n            <p>{mps}</p>\n        </div>\n    )\n}\n\nexport default MealPerSecond","import React from \"react\"\nimport { RiBugLine } from \"react-icons/ri\"\n\nconst WorkerUnlocked = ({worker, handleUpgrade}) => {\n    return (\n        <li key={worker.id}>\n            <button\n                key={`${worker.id}btn`} \n                onClick={() => handleUpgrade(worker.id)}\n                style={{cursor: 'pointer'}}\n                className=\"worker-item worker-item-unlocked\">\n                    <div className=\"worker-unlocked\">\n                        <div className=\"worker-icon-level-container\">\n                            <p className=\"worker-icon-unlocked\"><RiBugLine /></p>\n                            <p>{`lvl: ${worker.level}`}</p>\n                        </div>\n                        <div className=\"worker-info-container\">\n                            <p className=\"worker-name\">{`${worker.name}`}</p>\n                            <p>{`HPS: ${worker.HPS}`}</p>\n                            <p>{`Cost: ${worker.cost}`}</p>\n                            <p>{`Multiplier: x${worker.multiplier}`}</p>\n                        </div>\n                    </div>\n            </button>\n        </li>\n    )\n}\n\nexport default WorkerUnlocked","import React from \"react\"\nimport { BsQuestionSquare } from \"react-icons/bs\"\n\nconst WorkerLocked = ({workerId, workerCost, handleInitialPurchase}) => {\n    return  (\n        <li key={workerId}>\n            <button key={`${workerId}btn`} \n                    onClick={() => handleInitialPurchase(workerId)}\n                    className=\"worker-item\"\n                    style={{cursor: 'pointer'}}>\n                <div className=\"locked-container\">\n                    <p className=\"locked-icon\"><BsQuestionSquare/></p>\n                    <p className=\"locked-cost\">{`Cost: ${workerCost}`}</p>\n                </div>\n            </button>\n        </li>\n    )\n}\n\nexport default WorkerLocked","import React from \"react\"\nimport WorkerUnlocked from \"./WorkerUnlocked\"\nimport WorkerLocked from \"./WorkerLocked\"\n\nconst WorkerItem = ({workerStats, initialPurchase, upgradingUnit}) => {\n    if (workerStats.unlocked) {\n        return (\n            <WorkerUnlocked \n                worker={workerStats}\n                handleUpgrade={upgradingUnit}/>\n        )}\n    return (\n        <WorkerLocked \n            workerId={workerStats.id}\n            workerCost={workerStats.cost}\n            handleInitialPurchase={initialPurchase}\n            />\n    )\n}\n\nexport default WorkerItem","import React from \"react\"\n\nconst Meat = ({ meat }) => {\n    return (\n        <div className=\"meat-harvest\">\n            <h3 >Meat: </h3>\n            <p>{meat}</p>\n        </div>\n    )\n}\n\nexport default Meat","import React from \"react\"\n\nconst AttackPower = ({ attack }) => {\n\n    return (\n        <div className=\"attack-per-second\">\n            <p>{`Attack Power:`}</p>\n            <p>{attack}</p>\n        </div>\n    )\n}\n\nexport default AttackPower","import React from \"react\"\nimport { GiLongAntennaeBug } from \"react-icons/gi\"\n\nconst Enemy = ({name, health, level, kills, handleAttackClick}) => {\n    return (\n        <button className=\"enemy-data\" onClick={handleAttackClick}>\n            <h3>{name}</h3>\n            <p>{`Level: ${level}`}</p> \n            <p>Health:</p>\n            <p>{health}</p>\n            <p>Kills:</p>\n            <p>{kills}</p>\n            <GiLongAntennaeBug className=\"enemy-image\"/>\n            <p className=\"enemy-data-bottom\">Click to kill</p>\n        </button>\n    )\n}\n\nexport default Enemy","const newPlayer = {\n    meal: 0,\n    clickMultiplier: 1,\n    mealPerSecond: 0, \n    workers : [\n        {\n            id : \"w1\",\n            name : \"Queen\",\n            cost : 25,\n            HPS : 1,\n            level : 1,\n            unlocked : false,\n            multiplier : 1,\n            baseCost : 25,\n            baseHPS : 1,   \n        },\n        {   \n            id : \"w2\",\n            name : \"Brood Chamber\",\n            cost : 100,\n            HPS : 3,\n            level : 1,\n            unlocked : false,\n            multiplier : 1,\n            baseCost : 100,\n            baseHPS : 3, \n        },\n        {   \n            id : \"w3\",\n            name : \"Attentive Daughters\",\n            cost : 500,\n            HPS : 7,\n            level : 1,\n            unlocked : false,\n            multiplier : 1,\n            baseCost : 500,\n            baseHPS : 7, \n        },\n        {   \n            id : \"w4\",\n            name : \"Moldy Chambers\",\n            cost : 3000,\n            HPS : 12,\n            level : 1,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 3000,\n            baseHPS : 12, \n        },\n        {   \n            id : \"w5\",\n            name : \"Aphid Farm\",\n            cost : 10000,\n            HPS : 40,\n            level : 1,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 10000,\n            baseHPS : 40, \n        },\n        {   \n            id : \"w6\",\n            name : \"Local Insects\",\n            cost : 40000,\n            HPS : 100,\n            level : 1,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 40000,\n            baseHPS : 100, \n        },\n        {   \n            id : \"w7\",\n            name : \"Stray Garbage\",\n            cost : 200000,\n            HPS : 400,\n            level : 1,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 200000,\n            baseHPS : 400, \n        },\n        {   \n            id : \"w8\",\n            name : \"Farming for... Ants?\",\n            cost : 1600000,\n            HPS : 6500,\n            level : 1,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 1600000,\n            baseHPS : 6500, \n        },\n        {   \n            id : \"w9\",\n            name : \"Primitive Harvesting Techniques\",\n            cost : 120000000,\n            HPS : 99000,\n            level : 1,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 120000000,\n            baseHPS : 99000, \n        },\n        {   \n            id : \"w10\",\n            name : \"Human Farming Supplies\",\n            cost : 4000000000,\n            HPS : 100000,\n            level : 1,\n            unlocked : false,\n            multiplier : 1,\n            baseCost: 4000000000,\n            baseHPS : 100000, \n        },\n    ],\n    attackPower: 1,\n    attackPerSecond: 1,\n    meat : 0,\n    enemy : {\n        name : \"Bill the Placeholder Bug\",\n        level : 1,\n        health : 25,\n        kills : 0,\n        baseHealth : 25,\n    },\n    warriors : [\n        {\n            name: \"Arissa\",\n            attack : 10,\n            meatCost : 1,\n            harvestCost : 1200,\n            baseAttack : 10,\n            baseHarvestCost : 1200,\n            baseMeatCost : 1,\n        },\n        {\n            name: \"Donatello\",\n            attack : 25,\n            meatCost : 100,\n            harvestCost : 12000,\n            baseAttack : 25,\n            baseHarvestCost : 12000,\n            baseMeatCost : 100,\n        },\n        {\n            name: \"Elizabeth\",\n            attack : 100,\n            meatCost : 1000,\n            harvestCost : 52000,\n            baseAttack : 100,\n            baseHarvestCost : 52000,\n            baseMeatCost : 1000,\n        },\n        {\n            name: \"Marcus\",\n            attack : 250,\n            meatCost : 25000,\n            harvestCost : 100000,\n            baseAttack : 250,\n            baseHarvestCost : 100000,\n            baseMeatCost : 25000,\n        },\n        {\n            name: \"Sangrinous\",\n            attack : 3000,\n            meatCost : 250000,\n            harvestCost : 100000000,\n            baseAttack : 3000,\n            baseHarvestCost : 100000000,\n            baseMeatCost : 100000000,\n        },\n\n    ]\n}\n\n\nexport { newPlayer }","import React, { useState, useEffect } from \"react\"\n\n// Components\nimport Buttons from \"./misc/Buttons\"\nimport Header from \"./misc/Header\"\nimport Message from \"./misc/Message\"\nimport Footer from \"./misc/Footer\"\n\n// Worker Components\nimport MealMined from \"./workers/MealMined\"\nimport MealPerSecond from \"./workers/MealPerSecond\"\nimport WorkerItem from \"./workers/WorkerItem\"\n\n// Warrior Components\nimport Meat from \"./warriors/Meat\"\nimport AttackPower from \"./warriors/AttackPower\"\nimport Enemy from \"./warriors/Enemy\"\n\n// Player object\nimport { newPlayer } from \"./data/NewPlayer\"\n\nconst GameContainer = () => {\n\n    ///////////////////////\n    // GAME PLAY SECTION//\n    //////////////////////\n\n    // Blank player object\n    let newPlayerObject = newPlayer\n\n    // Gameplay hook\n    const [player, setPlayer] = useState(getInitialPlayer())\n\n    // Initial Unlock of units\n    const handleInitialPurchase = id => {\n        // Handles the initial purchase of a worker from hidden to revealed.\n        for (let i=0; i < player.workers.length; i++) {\n            if (player.workers[i].id === id) {\n                const selectedWorker = player.workers[i]\n                if (player.meal >= selectedWorker.cost) {\n                    unlockUnit(selectedWorker)\n                    handleMessage(\"\")\n                } else {\n                    handleMessage(\"Insufficient harvest for unlock.\")\n                }\n            }\n        }\n        \n        setPlayer(prevPlayer => ({\n            ...prevPlayer,\n            mealPerSecond: prevPlayer.workers.reduce((total, worker) => {\n                if (worker.unlocked) {\n                    return total + worker.HPS\n                } else {\n                    return total\n                }\n            }, 0), \n        }))\n    }\n\n    function unlockUnit(selectedUnit) {\n        setPlayer({\n            ...player,\n            meal : player.meal - selectedUnit.cost, \n            workers : player.workers.map(prevWorker => {\n                if (prevWorker.id === selectedUnit.id) {\n                    prevWorker.unlocked = true\n                    prevWorker.cost = Math.round(((prevWorker.cost * prevWorker.multiplier) * (1.07**prevWorker.level)))\n                }\n                return prevWorker\n            }),\n        })\n    }\n\n    // Upgrading units\n    const handleUpgrade = id => {\n        for (let i=0; i < player.workers.length; i++) {\n            if (player.workers[i].id === id) {\n                const selectedWorker = player.workers[i]\n                if (player.meal >= selectedWorker.cost) {\n                    upgradeUnit(selectedWorker)\n                    handleMessage(\"\")\n                } else {\n                    handleMessage(\"Insufficient harvest for upgrade.\")\n                }\n            }  \n        }\n    }\n\n    function upgradeUnit(selectedUnit) {\n        setPlayer({\n            ...player,\n            meal : player.meal - selectedUnit.cost,\n            workers : player.workers.map(prevWorker => {\n                if (prevWorker.id === selectedUnit.id) {\n                    prevWorker.cost = Math.round((prevWorker.cost * (1.07**prevWorker.level)))\n                    prevWorker.level = prevWorker.level + 1\n                    prevWorker.HPS = prevWorker.HPS > 1 ? prevWorker.HPS + (prevWorker.baseHPS * prevWorker.multiplier) : prevWorker.HPS + 1\n                }\n                return prevWorker\n            }),\n            mealPerSecond: player.workers.reduce((total, worker) => {\n                if (worker.unlocked) {\n                    return total + worker.HPS\n                } else {\n                    return total\n                }\n            }, 0), \n        })\n    }\n\n    // Handles clicking events on screen for resources\n    const handleClick = () => {\n        setPlayer(prevPlayer => ({\n            ...prevPlayer,\n            meal : prevPlayer.meal + prevPlayer.clickMultiplier\n        }))\n    }\n\n    const handleAttack = () => {\n        const { enemyStats, meatStats } = enemyDamageCalculator(\"attackPower\")\n        setPlayer(prevPlayer => ({\n            ...prevPlayer,\n            enemy : enemyStats,\n            meat : meatStats,\n        }))\n\n    }\n\n    function enemyDamageCalculator(type) {\n        if (player.enemy.health - player[type] <= 0) {\n            const enemyStats = { \n                    ...player.enemy,\n                    level : player.enemy.level + 1,\n                    health: Math.round((player.enemy.baseHealth * (1.2**player.enemy.level))),\n                    kills : player.enemy.kills + 1,}\n            const meatStats = player.meat + (Math.round(.01 * player.enemy.health) > 1 ? Math.round(.01 * player.enemy.health) : 1)\n\n            return {enemyStats, meatStats}\n        } else {\n            const enemyStats = {\n                    ...player.enemy,\n                    health: player.enemy.health - player[type]\n                }\n            const meatStats = player.meat\n            \n            return {enemyStats, meatStats}\n        }\n    }\n\n    ////////////////////////////\n    // END OF GAMEPLAY SECTION//\n    ///////////////////////////\n\n\n    //////////////////////\n    // INCREMENTAL TIMER//\n    /////////////////////\n    useEffect(() => {\n        const { enemyStats, meatStats } = enemyDamageCalculator(\"attackPerSecond\")\n        const interval = setInterval(() => {\n            setPlayer(prevPlayer => ({\n                ...prevPlayer, \n                meal : prevPlayer.meal + prevPlayer.mealPerSecond,\n                enemy : enemyStats,\n                meat : meatStats,\n            }))\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [player]);\n\n    //////////////////////////\n    // END INCREMENTAL TIMER//\n    /////////////////////////\n\n\n    //////////////////////////////////////////////////////\n    // SAVING AND DELETING DATA TO LOCAL STORAGE SECTION//\n    /////////////////////////////////////////////////////\n    const handleDelete = () => {\n        // Deletes the game save from local storage.\n        const answer = window.confirm(\"Reset all save data?\")\n        if (answer) {\n            localStorage.removeItem(\"player\")\n            resetPlayer()\n        }   \n    }\n\n    function resetPlayer() {\n        setPlayer(newPlayerObject)\n        window.location.reload()\n    }\n\n    function getInitialPlayer() {\n        // Parses local storage for player data before assigning a new game.\n        const temp = localStorage.getItem(\"player\")\n        const savedPlayer = JSON.parse(temp)\n        return savedPlayer || newPlayerObject\n    } \n\n    useEffect(() => {\n        // Sets data to local storage any time player object changes.\n        const temp = JSON.stringify(player)\n        localStorage.setItem(\"player\", temp)\n    }, [player])\n    ////////////////////////////////\n    // END OF SAVE DELETE SECTION//\n    ///////////////////////////////\n\n    ///////////////////////\n    // MESSAGE SECTION ///\n    //////////////////////\n    const [message, setMessage] = useState(\"Click on Harvest Meal to begin.\")\n\n    const handleMessage = ( message ) => {\n        setMessage(message)\n    }\n    ////////////////////////////\n    // END OF MESSAGE SECTION //\n    ///////////////////////////\n    \n    return (\n        <div className=\"game-area\">\n            <div className=\"header-container\">\n                <Header />\n                <Message sendMessage={message}/>\n                <Buttons\n                    text=\"New Game\" \n                    handleClickEvent={handleDelete}\n                    classNameAssigned=\"new-game-btn\"\n                />\n            </div>\n                <div className=\"gameplay-row\">\n                <div className=\"gameplay-section\">\n                    <div className=\"harvest-section\">\n                        <MealMined meal={player.meal} />\n                        <MealPerSecond mps={player.mealPerSecond}/>\n                        <Buttons \n                            text=\"Harvest Meal\" \n                            handleClickEvent={handleClick}\n                            classNameAssigned=\"harvest-meal-btn\" \n                        />\n                    </div>\n                    <div className=\"workers-section\">\n                        <h3>Workers</h3>\n                        <ul className=\"worker-list\">\n                            {player.workers.map(worker => {\n                                return <WorkerItem \n                                            workerStats={worker} \n                                            initialPurchase={handleInitialPurchase}\n                                            upgradingUnit={handleUpgrade}\n                                        />\n                            })}\n                        </ul>\n                    </div> \n                </div>\n                    <div className=\"warrior-section\">\n                        <Meat \n                            meat={player.meat}\n                        />\n                        <AttackPower attack={player.attackPerSecond}/>\n                        <Enemy\n                            handleAttackClick={handleAttack} \n                            name={player.enemy.name}\n                            health={player.enemy.health}\n                            level={player.enemy.level}\n                            kills={player.enemy.kills}\n                        />\n                    </div>\n                </div>\n\n                <footer>\n                    <Footer /> \n                </footer>         \n        </div>\n    )\n}\n\nexport default GameContainer","import React from \"react\"\n\n// Components\nimport GameContainer from \"./components/GameContainer\"\n\nfunction App() {\n\n return (\n    <div>\n      <GameContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./App.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}